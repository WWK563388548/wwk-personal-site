name: Claude Code Issue Handler

on:
  issues:
    types: [opened, edited, labeled]

permissions:
  issues: write
  contents: write
  pull-requests: write

jobs:
  process-issue:
    runs-on: ubuntu-latest
    # 只处理带有claude-code标签的issue
    if: contains(github.event.issue.labels.*.name, 'claude-code')

    steps:
      # 检出代码库
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 设置Node.js环境
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 安装Claude Code CLI
      - name: Install Claude Code CLI
        run: npm install -g @anthropic-ai/claude-code

      # 获取issue详情
      - name: Get issue details
        id: issue
        uses: actions/github-script@v6
        with:
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            core.setOutput('title', issue.data.title);
            core.setOutput('body', issue.data.body);

      # 创建分支
      - name: Create branch for changes
        id: branch
        run: |
          BRANCH_NAME="claude-code/issue-${{ github.event.issue.number }}"
          git checkout -b $BRANCH_NAME
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      # 运行Claude Code (使用Anthropic API而非Bedrock)
      - name: Run Claude Code
        id: claude-code
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          ANTHROPIC_MODEL: "claude-3-7-sonnet-20250219-v1"
          DISABLE_PROMPT_CACHING: "1"
        run: |
          # 提取issue内容作为提示
          ISSUE_BODY="${{ steps.issue.outputs.body }}"

          # 运行Claude Code并要求生成总结
          claude -p "$ISSUE_BODY

          After making the changes, please provide a summary of what you did in the following format:

          ---SUMMARY---
          [Your summary of changes here, including what files were modified and what changes were made]
          ---END SUMMARY---" --allowedTools "Bash(git diff:*)" "Bash(git log:*)" Edit > claude_output.txt

          # 检查是否有更改
          if [[ -n $(git status --porcelain) ]]; then
            echo "Changes detected, proceeding with commit"

            # 提取Claude的总结
            if grep -q -- "---SUMMARY---" claude_output.txt; then
              SUMMARY=$(sed -n '/---SUMMARY---/,/---END SUMMARY---/p' claude_output.txt | grep -v -- "---SUMMARY---" | grep -v -- "---END SUMMARY---")
              echo "summary<<EOF" >> $GITHUB_OUTPUT
              echo "$SUMMARY" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
            else
              echo "No summary found in Claude's output"
              echo "summary=Changes were made by Claude Code based on the issue description." >> $GITHUB_OUTPUT
            fi
          else
            echo "No changes detected"
            exit 1
          fi

      # 提交更改
      - name: Commit changes
        run: |
          git config --global user.name "Claude Code Bot"
          git config --global user.email "claude-code-bot@example.com"
          git add .
          git commit -m "Changes from issue #${{ github.event.issue.number }}: ${{ steps.issue.outputs.title }}"

          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin ${{ steps.branch.outputs.branch_name }}

      # 创建PR
      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.ACTIONS_TOKEN }}
          script: |
            const issueNumber = context.issue.number;

            // 获取issue详情用于PR描述
            const { data: issue } = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber
            });

            // 创建详细的PR描述，包含Claude的总结
            const prBody = `
            ## 更改摘要

            此PR解决了issue #${issueNumber}中请求的代码更改。

            ### Claude的更改摘要

            ${process.env.CLAUDE_SUMMARY}

            ### 原始请求

            ${issue.body}

            ### 实现说明

            这些更改由Claude Code根据issue描述实现。
            请审查更改并通过评论提供反馈，格式为：\`Review: 您的反馈内容\`。
            `;

            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Claude Code changes for issue #${issueNumber}`,
              body: prBody,
              head: '${{ steps.branch.outputs.branch_name }}',
              base: 'develop'
            });

            // 在issue上添加评论，链接到PR
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `✅ 已创建PR #${pr.number}，包含请求的更改: ${pr.html_url}`
            });
        env:
          CLAUDE_SUMMARY: ${{ steps.claude-code.outputs.summary }} 
